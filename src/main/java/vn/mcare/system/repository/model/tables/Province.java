/*
 * This file is generated by jOOQ.
 */
package vn.mcare.system.repository.model.tables;


import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row3;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import vn.mcare.system.repository.model.Keys;
import vn.mcare.system.repository.model.ThangvtmMcare;
import vn.mcare.system.repository.model.tables.records.ProvinceRecord;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Province extends TableImpl<ProvinceRecord> {

    private static final long serialVersionUID = -891665968;

    /**
     * The reference instance of <code>thangvtm_mcare.province</code>
     */
    public static final Province PROVINCE = new Province();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ProvinceRecord> getRecordType() {
        return ProvinceRecord.class;
    }

    /**
     * The column <code>thangvtm_mcare.province.id</code>.
     */
    public final TableField<ProvinceRecord, Integer> ID = createField(DSL.name("id"), org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>thangvtm_mcare.province.name</code>.
     */
    public final TableField<ProvinceRecord, String> NAME = createField(DSL.name("name"), org.jooq.impl.SQLDataType.VARCHAR(50).nullable(false), this, "");

    /**
     * The column <code>thangvtm_mcare.province.code</code>.
     */
    public final TableField<ProvinceRecord, String> CODE = createField(DSL.name("code"), org.jooq.impl.SQLDataType.VARCHAR(20).nullable(false), this, "");

    /**
     * Create a <code>thangvtm_mcare.province</code> table reference
     */
    public Province() {
        this(DSL.name("province"), null);
    }

    /**
     * Create an aliased <code>thangvtm_mcare.province</code> table reference
     */
    public Province(String alias) {
        this(DSL.name(alias), PROVINCE);
    }

    /**
     * Create an aliased <code>thangvtm_mcare.province</code> table reference
     */
    public Province(Name alias) {
        this(alias, PROVINCE);
    }

    private Province(Name alias, Table<ProvinceRecord> aliased) {
        this(alias, aliased, null);
    }

    private Province(Name alias, Table<ProvinceRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    public <O extends Record> Province(Table<O> child, ForeignKey<O, ProvinceRecord> key) {
        super(child, key, PROVINCE);
    }

    @Override
    public Schema getSchema() {
        return ThangvtmMcare.THANGVTM_MCARE;
    }

    @Override
    public UniqueKey<ProvinceRecord> getPrimaryKey() {
        return Keys.KEY_PROVINCE_PRIMARY;
    }

    @Override
    public List<UniqueKey<ProvinceRecord>> getKeys() {
        return Arrays.<UniqueKey<ProvinceRecord>>asList(Keys.KEY_PROVINCE_PRIMARY);
    }

    @Override
    public Province as(String alias) {
        return new Province(DSL.name(alias), this);
    }

    @Override
    public Province as(Name alias) {
        return new Province(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Province rename(String name) {
        return new Province(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Province rename(Name name) {
        return new Province(name, null);
    }

    // -------------------------------------------------------------------------
    // Row3 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row3<Integer, String, String> fieldsRow() {
        return (Row3) super.fieldsRow();
    }
}
