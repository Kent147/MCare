/*
 * This file is generated by jOOQ.
 */
package vn.mcare.system.repository.model.tables;


import java.time.LocalDate;
import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row8;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import vn.mcare.system.repository.model.Keys;
import vn.mcare.system.repository.model.ThangvtmMcare;
import vn.mcare.system.repository.model.tables.records.ServiceBillRecord;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ServiceBill extends TableImpl<ServiceBillRecord> {

    private static final long serialVersionUID = 1636983126;

    /**
     * The reference instance of <code>thangvtm_mcare.service_bill</code>
     */
    public static final ServiceBill SERVICE_BILL = new ServiceBill();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ServiceBillRecord> getRecordType() {
        return ServiceBillRecord.class;
    }

    /**
     * The column <code>thangvtm_mcare.service_bill.id</code>.
     */
    public final TableField<ServiceBillRecord, Integer> ID = createField(DSL.name("id"), org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>thangvtm_mcare.service_bill.bill_id</code>.
     */
    public final TableField<ServiceBillRecord, String> BILL_ID = createField(DSL.name("bill_id"), org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false), this, "");

    /**
     * The column <code>thangvtm_mcare.service_bill.service_id</code>.
     */
    public final TableField<ServiceBillRecord, String> SERVICE_ID = createField(DSL.name("service_id"), org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false), this, "");

    /**
     * The column <code>thangvtm_mcare.service_bill.from_date</code>.
     */
    public final TableField<ServiceBillRecord, LocalDate> FROM_DATE = createField(DSL.name("from_date"), org.jooq.impl.SQLDataType.LOCALDATE.nullable(false), this, "");

    /**
     * The column <code>thangvtm_mcare.service_bill.to_date</code>.
     */
    public final TableField<ServiceBillRecord, LocalDate> TO_DATE = createField(DSL.name("to_date"), org.jooq.impl.SQLDataType.LOCALDATE.nullable(false), this, "");

    /**
     * The column <code>thangvtm_mcare.service_bill.quantity</code>.
     */
    public final TableField<ServiceBillRecord, Integer> QUANTITY = createField(DSL.name("quantity"), org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>thangvtm_mcare.service_bill.created_at</code>.
     */
    public final TableField<ServiceBillRecord, LocalDateTime> CREATED_AT = createField(DSL.name("created_at"), org.jooq.impl.SQLDataType.LOCALDATETIME.defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.LOCALDATETIME)), this, "");

    /**
     * The column <code>thangvtm_mcare.service_bill.modified_at</code>.
     */
    public final TableField<ServiceBillRecord, LocalDateTime> MODIFIED_AT = createField(DSL.name("modified_at"), org.jooq.impl.SQLDataType.LOCALDATETIME.defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.LOCALDATETIME)), this, "");

    /**
     * Create a <code>thangvtm_mcare.service_bill</code> table reference
     */
    public ServiceBill() {
        this(DSL.name("service_bill"), null);
    }

    /**
     * Create an aliased <code>thangvtm_mcare.service_bill</code> table reference
     */
    public ServiceBill(String alias) {
        this(DSL.name(alias), SERVICE_BILL);
    }

    /**
     * Create an aliased <code>thangvtm_mcare.service_bill</code> table reference
     */
    public ServiceBill(Name alias) {
        this(alias, SERVICE_BILL);
    }

    private ServiceBill(Name alias, Table<ServiceBillRecord> aliased) {
        this(alias, aliased, null);
    }

    private ServiceBill(Name alias, Table<ServiceBillRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    public <O extends Record> ServiceBill(Table<O> child, ForeignKey<O, ServiceBillRecord> key) {
        super(child, key, SERVICE_BILL);
    }

    @Override
    public Schema getSchema() {
        return ThangvtmMcare.THANGVTM_MCARE;
    }

    @Override
    public Identity<ServiceBillRecord, Integer> getIdentity() {
        return Keys.IDENTITY_SERVICE_BILL;
    }

    @Override
    public UniqueKey<ServiceBillRecord> getPrimaryKey() {
        return Keys.KEY_SERVICE_BILL_PRIMARY;
    }

    @Override
    public List<UniqueKey<ServiceBillRecord>> getKeys() {
        return Arrays.<UniqueKey<ServiceBillRecord>>asList(Keys.KEY_SERVICE_BILL_PRIMARY);
    }

    @Override
    public ServiceBill as(String alias) {
        return new ServiceBill(DSL.name(alias), this);
    }

    @Override
    public ServiceBill as(Name alias) {
        return new ServiceBill(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ServiceBill rename(String name) {
        return new ServiceBill(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public ServiceBill rename(Name name) {
        return new ServiceBill(name, null);
    }

    // -------------------------------------------------------------------------
    // Row8 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row8<Integer, String, String, LocalDate, LocalDate, Integer, LocalDateTime, LocalDateTime> fieldsRow() {
        return (Row8) super.fieldsRow();
    }
}
