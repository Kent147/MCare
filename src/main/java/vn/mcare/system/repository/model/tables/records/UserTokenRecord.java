/*
 * This file is generated by jOOQ.
 */
package vn.mcare.system.repository.model.tables.records;


import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record8;
import org.jooq.Row8;
import org.jooq.impl.UpdatableRecordImpl;

import vn.mcare.system.repository.model.tables.UserToken;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserTokenRecord extends UpdatableRecordImpl<UserTokenRecord> implements Record8<Integer, String, String, Integer, Integer, LocalDateTime, LocalDateTime, LocalDateTime> {

    private static final long serialVersionUID = -1370689847;

    /**
     * Setter for <code>thangvtm_mcare.user_token.id</code>.
     */
    public UserTokenRecord setId(Integer value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>thangvtm_mcare.user_token.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>thangvtm_mcare.user_token.cif</code>.
     */
    public UserTokenRecord setCif(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>thangvtm_mcare.user_token.cif</code>.
     */
    public String getCif() {
        return (String) get(1);
    }

    /**
     * Setter for <code>thangvtm_mcare.user_token.token</code>.
     */
    public UserTokenRecord setToken(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>thangvtm_mcare.user_token.token</code>.
     */
    public String getToken() {
        return (String) get(2);
    }

    /**
     * Setter for <code>thangvtm_mcare.user_token.token_type</code>.
     */
    public UserTokenRecord setTokenType(Integer value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>thangvtm_mcare.user_token.token_type</code>.
     */
    public Integer getTokenType() {
        return (Integer) get(3);
    }

    /**
     * Setter for <code>thangvtm_mcare.user_token.status</code>.
     */
    public UserTokenRecord setStatus(Integer value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>thangvtm_mcare.user_token.status</code>.
     */
    public Integer getStatus() {
        return (Integer) get(4);
    }

    /**
     * Setter for <code>thangvtm_mcare.user_token.expire_date</code>.
     */
    public UserTokenRecord setExpireDate(LocalDateTime value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>thangvtm_mcare.user_token.expire_date</code>.
     */
    public LocalDateTime getExpireDate() {
        return (LocalDateTime) get(5);
    }

    /**
     * Setter for <code>thangvtm_mcare.user_token.created_at</code>.
     */
    public UserTokenRecord setCreatedAt(LocalDateTime value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>thangvtm_mcare.user_token.created_at</code>.
     */
    public LocalDateTime getCreatedAt() {
        return (LocalDateTime) get(6);
    }

    /**
     * Setter for <code>thangvtm_mcare.user_token.modified_at</code>.
     */
    public UserTokenRecord setModifiedAt(LocalDateTime value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>thangvtm_mcare.user_token.modified_at</code>.
     */
    public LocalDateTime getModifiedAt() {
        return (LocalDateTime) get(7);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record8 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row8<Integer, String, String, Integer, Integer, LocalDateTime, LocalDateTime, LocalDateTime> fieldsRow() {
        return (Row8) super.fieldsRow();
    }

    @Override
    public Row8<Integer, String, String, Integer, Integer, LocalDateTime, LocalDateTime, LocalDateTime> valuesRow() {
        return (Row8) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return UserToken.USER_TOKEN.ID;
    }

    @Override
    public Field<String> field2() {
        return UserToken.USER_TOKEN.CIF;
    }

    @Override
    public Field<String> field3() {
        return UserToken.USER_TOKEN.TOKEN;
    }

    @Override
    public Field<Integer> field4() {
        return UserToken.USER_TOKEN.TOKEN_TYPE;
    }

    @Override
    public Field<Integer> field5() {
        return UserToken.USER_TOKEN.STATUS;
    }

    @Override
    public Field<LocalDateTime> field6() {
        return UserToken.USER_TOKEN.EXPIRE_DATE;
    }

    @Override
    public Field<LocalDateTime> field7() {
        return UserToken.USER_TOKEN.CREATED_AT;
    }

    @Override
    public Field<LocalDateTime> field8() {
        return UserToken.USER_TOKEN.MODIFIED_AT;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getCif();
    }

    @Override
    public String component3() {
        return getToken();
    }

    @Override
    public Integer component4() {
        return getTokenType();
    }

    @Override
    public Integer component5() {
        return getStatus();
    }

    @Override
    public LocalDateTime component6() {
        return getExpireDate();
    }

    @Override
    public LocalDateTime component7() {
        return getCreatedAt();
    }

    @Override
    public LocalDateTime component8() {
        return getModifiedAt();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getCif();
    }

    @Override
    public String value3() {
        return getToken();
    }

    @Override
    public Integer value4() {
        return getTokenType();
    }

    @Override
    public Integer value5() {
        return getStatus();
    }

    @Override
    public LocalDateTime value6() {
        return getExpireDate();
    }

    @Override
    public LocalDateTime value7() {
        return getCreatedAt();
    }

    @Override
    public LocalDateTime value8() {
        return getModifiedAt();
    }

    @Override
    public UserTokenRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public UserTokenRecord value2(String value) {
        setCif(value);
        return this;
    }

    @Override
    public UserTokenRecord value3(String value) {
        setToken(value);
        return this;
    }

    @Override
    public UserTokenRecord value4(Integer value) {
        setTokenType(value);
        return this;
    }

    @Override
    public UserTokenRecord value5(Integer value) {
        setStatus(value);
        return this;
    }

    @Override
    public UserTokenRecord value6(LocalDateTime value) {
        setExpireDate(value);
        return this;
    }

    @Override
    public UserTokenRecord value7(LocalDateTime value) {
        setCreatedAt(value);
        return this;
    }

    @Override
    public UserTokenRecord value8(LocalDateTime value) {
        setModifiedAt(value);
        return this;
    }

    @Override
    public UserTokenRecord values(Integer value1, String value2, String value3, Integer value4, Integer value5, LocalDateTime value6, LocalDateTime value7, LocalDateTime value8) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached UserTokenRecord
     */
    public UserTokenRecord() {
        super(UserToken.USER_TOKEN);
    }

    /**
     * Create a detached, initialised UserTokenRecord
     */
    public UserTokenRecord(Integer id, String cif, String token, Integer tokenType, Integer status, LocalDateTime expireDate, LocalDateTime createdAt, LocalDateTime modifiedAt) {
        super(UserToken.USER_TOKEN);

        set(0, id);
        set(1, cif);
        set(2, token);
        set(3, tokenType);
        set(4, status);
        set(5, expireDate);
        set(6, createdAt);
        set(7, modifiedAt);
    }
}
