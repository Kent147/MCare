/*
 * This file is generated by jOOQ.
 */
package vn.mcare.system.repository.model.tables.records;


import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record8;
import org.jooq.Row8;
import org.jooq.impl.UpdatableRecordImpl;

import vn.mcare.system.repository.model.tables.ExamineInfo;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ExamineInfoRecord extends UpdatableRecordImpl<ExamineInfoRecord> implements Record8<String, Integer, String, String, LocalDateTime, LocalDateTime, LocalDateTime, LocalDateTime> {

    private static final long serialVersionUID = 1017157090;

    /**
     * Setter for <code>thangvtm_mcare.examine_info.examine_id</code>.
     */
    public ExamineInfoRecord setExamineId(String value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>thangvtm_mcare.examine_info.examine_id</code>.
     */
    public String getExamineId() {
        return (String) get(0);
    }

    /**
     * Setter for <code>thangvtm_mcare.examine_info.status</code>.
     */
    public ExamineInfoRecord setStatus(Integer value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>thangvtm_mcare.examine_info.status</code>.
     */
    public Integer getStatus() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>thangvtm_mcare.examine_info.attend_doctor</code>.
     */
    public ExamineInfoRecord setAttendDoctor(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>thangvtm_mcare.examine_info.attend_doctor</code>.
     */
    public String getAttendDoctor() {
        return (String) get(2);
    }

    /**
     * Setter for <code>thangvtm_mcare.examine_info.diagnose</code>.
     */
    public ExamineInfoRecord setDiagnose(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>thangvtm_mcare.examine_info.diagnose</code>.
     */
    public String getDiagnose() {
        return (String) get(3);
    }

    /**
     * Setter for <code>thangvtm_mcare.examine_info.check_in</code>.
     */
    public ExamineInfoRecord setCheckIn(LocalDateTime value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>thangvtm_mcare.examine_info.check_in</code>.
     */
    public LocalDateTime getCheckIn() {
        return (LocalDateTime) get(4);
    }

    /**
     * Setter for <code>thangvtm_mcare.examine_info.check_out</code>.
     */
    public ExamineInfoRecord setCheckOut(LocalDateTime value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>thangvtm_mcare.examine_info.check_out</code>.
     */
    public LocalDateTime getCheckOut() {
        return (LocalDateTime) get(5);
    }

    /**
     * Setter for <code>thangvtm_mcare.examine_info.created_at</code>.
     */
    public ExamineInfoRecord setCreatedAt(LocalDateTime value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>thangvtm_mcare.examine_info.created_at</code>.
     */
    public LocalDateTime getCreatedAt() {
        return (LocalDateTime) get(6);
    }

    /**
     * Setter for <code>thangvtm_mcare.examine_info.modified_at</code>.
     */
    public ExamineInfoRecord setModifiedAt(LocalDateTime value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>thangvtm_mcare.examine_info.modified_at</code>.
     */
    public LocalDateTime getModifiedAt() {
        return (LocalDateTime) get(7);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record8 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row8<String, Integer, String, String, LocalDateTime, LocalDateTime, LocalDateTime, LocalDateTime> fieldsRow() {
        return (Row8) super.fieldsRow();
    }

    @Override
    public Row8<String, Integer, String, String, LocalDateTime, LocalDateTime, LocalDateTime, LocalDateTime> valuesRow() {
        return (Row8) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return ExamineInfo.EXAMINE_INFO.EXAMINE_ID;
    }

    @Override
    public Field<Integer> field2() {
        return ExamineInfo.EXAMINE_INFO.STATUS;
    }

    @Override
    public Field<String> field3() {
        return ExamineInfo.EXAMINE_INFO.ATTEND_DOCTOR;
    }

    @Override
    public Field<String> field4() {
        return ExamineInfo.EXAMINE_INFO.DIAGNOSE;
    }

    @Override
    public Field<LocalDateTime> field5() {
        return ExamineInfo.EXAMINE_INFO.CHECK_IN;
    }

    @Override
    public Field<LocalDateTime> field6() {
        return ExamineInfo.EXAMINE_INFO.CHECK_OUT;
    }

    @Override
    public Field<LocalDateTime> field7() {
        return ExamineInfo.EXAMINE_INFO.CREATED_AT;
    }

    @Override
    public Field<LocalDateTime> field8() {
        return ExamineInfo.EXAMINE_INFO.MODIFIED_AT;
    }

    @Override
    public String component1() {
        return getExamineId();
    }

    @Override
    public Integer component2() {
        return getStatus();
    }

    @Override
    public String component3() {
        return getAttendDoctor();
    }

    @Override
    public String component4() {
        return getDiagnose();
    }

    @Override
    public LocalDateTime component5() {
        return getCheckIn();
    }

    @Override
    public LocalDateTime component6() {
        return getCheckOut();
    }

    @Override
    public LocalDateTime component7() {
        return getCreatedAt();
    }

    @Override
    public LocalDateTime component8() {
        return getModifiedAt();
    }

    @Override
    public String value1() {
        return getExamineId();
    }

    @Override
    public Integer value2() {
        return getStatus();
    }

    @Override
    public String value3() {
        return getAttendDoctor();
    }

    @Override
    public String value4() {
        return getDiagnose();
    }

    @Override
    public LocalDateTime value5() {
        return getCheckIn();
    }

    @Override
    public LocalDateTime value6() {
        return getCheckOut();
    }

    @Override
    public LocalDateTime value7() {
        return getCreatedAt();
    }

    @Override
    public LocalDateTime value8() {
        return getModifiedAt();
    }

    @Override
    public ExamineInfoRecord value1(String value) {
        setExamineId(value);
        return this;
    }

    @Override
    public ExamineInfoRecord value2(Integer value) {
        setStatus(value);
        return this;
    }

    @Override
    public ExamineInfoRecord value3(String value) {
        setAttendDoctor(value);
        return this;
    }

    @Override
    public ExamineInfoRecord value4(String value) {
        setDiagnose(value);
        return this;
    }

    @Override
    public ExamineInfoRecord value5(LocalDateTime value) {
        setCheckIn(value);
        return this;
    }

    @Override
    public ExamineInfoRecord value6(LocalDateTime value) {
        setCheckOut(value);
        return this;
    }

    @Override
    public ExamineInfoRecord value7(LocalDateTime value) {
        setCreatedAt(value);
        return this;
    }

    @Override
    public ExamineInfoRecord value8(LocalDateTime value) {
        setModifiedAt(value);
        return this;
    }

    @Override
    public ExamineInfoRecord values(String value1, Integer value2, String value3, String value4, LocalDateTime value5, LocalDateTime value6, LocalDateTime value7, LocalDateTime value8) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ExamineInfoRecord
     */
    public ExamineInfoRecord() {
        super(ExamineInfo.EXAMINE_INFO);
    }

    /**
     * Create a detached, initialised ExamineInfoRecord
     */
    public ExamineInfoRecord(String examineId, Integer status, String attendDoctor, String diagnose, LocalDateTime checkIn, LocalDateTime checkOut, LocalDateTime createdAt, LocalDateTime modifiedAt) {
        super(ExamineInfo.EXAMINE_INFO);

        set(0, examineId);
        set(1, status);
        set(2, attendDoctor);
        set(3, diagnose);
        set(4, checkIn);
        set(5, checkOut);
        set(6, createdAt);
        set(7, modifiedAt);
    }
}
