/*
 * This file is generated by jOOQ.
 */
package vn.mcare.system.repository.model.tables;


import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row4;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import vn.mcare.system.repository.model.Keys;
import vn.mcare.system.repository.model.ThangvtmMcare;
import vn.mcare.system.repository.model.tables.records.ContentLayoutRecord;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ContentLayout extends TableImpl<ContentLayoutRecord> {

    private static final long serialVersionUID = -567343969;

    /**
     * The reference instance of <code>thangvtm_mcare.content_layout</code>
     */
    public static final ContentLayout CONTENT_LAYOUT = new ContentLayout();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ContentLayoutRecord> getRecordType() {
        return ContentLayoutRecord.class;
    }

    /**
     * The column <code>thangvtm_mcare.content_layout.content_key</code>.
     */
    public final TableField<ContentLayoutRecord, String> CONTENT_KEY = createField(DSL.name("content_key"), org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false), this, "");

    /**
     * The column <code>thangvtm_mcare.content_layout.title</code>.
     */
    public final TableField<ContentLayoutRecord, String> TITLE = createField(DSL.name("title"), org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false), this, "");

    /**
     * The column <code>thangvtm_mcare.content_layout.content</code>.
     */
    public final TableField<ContentLayoutRecord, String> CONTENT = createField(DSL.name("content"), org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>thangvtm_mcare.content_layout.description</code>.
     */
    public final TableField<ContentLayoutRecord, String> DESCRIPTION = createField(DSL.name("description"), org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false), this, "");

    /**
     * Create a <code>thangvtm_mcare.content_layout</code> table reference
     */
    public ContentLayout() {
        this(DSL.name("content_layout"), null);
    }

    /**
     * Create an aliased <code>thangvtm_mcare.content_layout</code> table reference
     */
    public ContentLayout(String alias) {
        this(DSL.name(alias), CONTENT_LAYOUT);
    }

    /**
     * Create an aliased <code>thangvtm_mcare.content_layout</code> table reference
     */
    public ContentLayout(Name alias) {
        this(alias, CONTENT_LAYOUT);
    }

    private ContentLayout(Name alias, Table<ContentLayoutRecord> aliased) {
        this(alias, aliased, null);
    }

    private ContentLayout(Name alias, Table<ContentLayoutRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    public <O extends Record> ContentLayout(Table<O> child, ForeignKey<O, ContentLayoutRecord> key) {
        super(child, key, CONTENT_LAYOUT);
    }

    @Override
    public Schema getSchema() {
        return ThangvtmMcare.THANGVTM_MCARE;
    }

    @Override
    public UniqueKey<ContentLayoutRecord> getPrimaryKey() {
        return Keys.KEY_CONTENT_LAYOUT_PRIMARY;
    }

    @Override
    public List<UniqueKey<ContentLayoutRecord>> getKeys() {
        return Arrays.<UniqueKey<ContentLayoutRecord>>asList(Keys.KEY_CONTENT_LAYOUT_PRIMARY);
    }

    @Override
    public ContentLayout as(String alias) {
        return new ContentLayout(DSL.name(alias), this);
    }

    @Override
    public ContentLayout as(Name alias) {
        return new ContentLayout(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ContentLayout rename(String name) {
        return new ContentLayout(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public ContentLayout rename(Name name) {
        return new ContentLayout(name, null);
    }

    // -------------------------------------------------------------------------
    // Row4 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row4<String, String, String, String> fieldsRow() {
        return (Row4) super.fieldsRow();
    }
}
