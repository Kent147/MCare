/*
 * This file is generated by jOOQ.
 */
package vn.mcare.system.repository.model.tables;


import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row11;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import vn.mcare.system.repository.model.Keys;
import vn.mcare.system.repository.model.ThangvtmMcare;
import vn.mcare.system.repository.model.tables.records.HealthMaintenanceRecord;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class HealthMaintenance extends TableImpl<HealthMaintenanceRecord> {

    private static final long serialVersionUID = 1149888435;

    /**
     * The reference instance of <code>thangvtm_mcare.health_maintenance</code>
     */
    public static final HealthMaintenance HEALTH_MAINTENANCE = new HealthMaintenance();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<HealthMaintenanceRecord> getRecordType() {
        return HealthMaintenanceRecord.class;
    }

    /**
     * The column <code>thangvtm_mcare.health_maintenance.id</code>.
     */
    public final TableField<HealthMaintenanceRecord, Integer> ID = createField(DSL.name("id"), org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>thangvtm_mcare.health_maintenance.examine_id</code>.
     */
    public final TableField<HealthMaintenanceRecord, String> EXAMINE_ID = createField(DSL.name("examine_id"), org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false), this, "");

    /**
     * The column <code>thangvtm_mcare.health_maintenance.blood_pressure_min</code>.
     */
    public final TableField<HealthMaintenanceRecord, Double> BLOOD_PRESSURE_MIN = createField(DSL.name("blood_pressure_min"), org.jooq.impl.SQLDataType.FLOAT, this, "");

    /**
     * The column <code>thangvtm_mcare.health_maintenance.blood_pressure_max</code>.
     */
    public final TableField<HealthMaintenanceRecord, Double> BLOOD_PRESSURE_MAX = createField(DSL.name("blood_pressure_max"), org.jooq.impl.SQLDataType.FLOAT, this, "");

    /**
     * The column <code>thangvtm_mcare.health_maintenance.blood_sugar</code>.
     */
    public final TableField<HealthMaintenanceRecord, Double> BLOOD_SUGAR = createField(DSL.name("blood_sugar"), org.jooq.impl.SQLDataType.FLOAT, this, "");

    /**
     * The column <code>thangvtm_mcare.health_maintenance.cholesterol</code>.
     */
    public final TableField<HealthMaintenanceRecord, Double> CHOLESTEROL = createField(DSL.name("cholesterol"), org.jooq.impl.SQLDataType.FLOAT, this, "");

    /**
     * The column <code>thangvtm_mcare.health_maintenance.temperature</code>.
     */
    public final TableField<HealthMaintenanceRecord, Double> TEMPERATURE = createField(DSL.name("temperature"), org.jooq.impl.SQLDataType.FLOAT, this, "");

    /**
     * The column <code>thangvtm_mcare.health_maintenance.weight</code>.
     */
    public final TableField<HealthMaintenanceRecord, Double> WEIGHT = createField(DSL.name("weight"), org.jooq.impl.SQLDataType.FLOAT, this, "");

    /**
     * The column <code>thangvtm_mcare.health_maintenance.height</code>.
     */
    public final TableField<HealthMaintenanceRecord, Double> HEIGHT = createField(DSL.name("height"), org.jooq.impl.SQLDataType.FLOAT, this, "");

    /**
     * The column <code>thangvtm_mcare.health_maintenance.created_at</code>.
     */
    public final TableField<HealthMaintenanceRecord, LocalDateTime> CREATED_AT = createField(DSL.name("created_at"), org.jooq.impl.SQLDataType.LOCALDATETIME.defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.LOCALDATETIME)), this, "");

    /**
     * The column <code>thangvtm_mcare.health_maintenance.modified_at</code>.
     */
    public final TableField<HealthMaintenanceRecord, LocalDateTime> MODIFIED_AT = createField(DSL.name("modified_at"), org.jooq.impl.SQLDataType.LOCALDATETIME.defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.LOCALDATETIME)), this, "");

    /**
     * Create a <code>thangvtm_mcare.health_maintenance</code> table reference
     */
    public HealthMaintenance() {
        this(DSL.name("health_maintenance"), null);
    }

    /**
     * Create an aliased <code>thangvtm_mcare.health_maintenance</code> table reference
     */
    public HealthMaintenance(String alias) {
        this(DSL.name(alias), HEALTH_MAINTENANCE);
    }

    /**
     * Create an aliased <code>thangvtm_mcare.health_maintenance</code> table reference
     */
    public HealthMaintenance(Name alias) {
        this(alias, HEALTH_MAINTENANCE);
    }

    private HealthMaintenance(Name alias, Table<HealthMaintenanceRecord> aliased) {
        this(alias, aliased, null);
    }

    private HealthMaintenance(Name alias, Table<HealthMaintenanceRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    public <O extends Record> HealthMaintenance(Table<O> child, ForeignKey<O, HealthMaintenanceRecord> key) {
        super(child, key, HEALTH_MAINTENANCE);
    }

    @Override
    public Schema getSchema() {
        return ThangvtmMcare.THANGVTM_MCARE;
    }

    @Override
    public Identity<HealthMaintenanceRecord, Integer> getIdentity() {
        return Keys.IDENTITY_HEALTH_MAINTENANCE;
    }

    @Override
    public UniqueKey<HealthMaintenanceRecord> getPrimaryKey() {
        return Keys.KEY_HEALTH_MAINTENANCE_PRIMARY;
    }

    @Override
    public List<UniqueKey<HealthMaintenanceRecord>> getKeys() {
        return Arrays.<UniqueKey<HealthMaintenanceRecord>>asList(Keys.KEY_HEALTH_MAINTENANCE_PRIMARY);
    }

    @Override
    public HealthMaintenance as(String alias) {
        return new HealthMaintenance(DSL.name(alias), this);
    }

    @Override
    public HealthMaintenance as(Name alias) {
        return new HealthMaintenance(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public HealthMaintenance rename(String name) {
        return new HealthMaintenance(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public HealthMaintenance rename(Name name) {
        return new HealthMaintenance(name, null);
    }

    // -------------------------------------------------------------------------
    // Row11 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row11<Integer, String, Double, Double, Double, Double, Double, Double, Double, LocalDateTime, LocalDateTime> fieldsRow() {
        return (Row11) super.fieldsRow();
    }
}
