/*
 * This file is generated by jOOQ.
 */
package vn.mcare.system.repository.model.tables;


import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row8;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import vn.mcare.system.repository.model.Keys;
import vn.mcare.system.repository.model.ThangvtmMcare;
import vn.mcare.system.repository.model.tables.records.PrescriptionRecord;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Prescription extends TableImpl<PrescriptionRecord> {

    private static final long serialVersionUID = -1662440991;

    /**
     * The reference instance of <code>thangvtm_mcare.prescription</code>
     */
    public static final Prescription PRESCRIPTION = new Prescription();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<PrescriptionRecord> getRecordType() {
        return PrescriptionRecord.class;
    }

    /**
     * The column <code>thangvtm_mcare.prescription.id</code>.
     */
    public final TableField<PrescriptionRecord, Integer> ID = createField(DSL.name("id"), org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>thangvtm_mcare.prescription.examine_id</code>.
     */
    public final TableField<PrescriptionRecord, String> EXAMINE_ID = createField(DSL.name("examine_id"), org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false), this, "");

    /**
     * The column <code>thangvtm_mcare.prescription.medicine_id</code>.
     */
    public final TableField<PrescriptionRecord, String> MEDICINE_ID = createField(DSL.name("medicine_id"), org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false), this, "");

    /**
     * The column <code>thangvtm_mcare.prescription.amount</code>.
     */
    public final TableField<PrescriptionRecord, Integer> AMOUNT = createField(DSL.name("amount"), org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>thangvtm_mcare.prescription.cal_unit</code>.
     */
    public final TableField<PrescriptionRecord, Integer> CAL_UNIT = createField(DSL.name("cal_unit"), org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>thangvtm_mcare.prescription.description</code>.
     */
    public final TableField<PrescriptionRecord, String> DESCRIPTION = createField(DSL.name("description"), org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>thangvtm_mcare.prescription.created_at</code>.
     */
    public final TableField<PrescriptionRecord, LocalDateTime> CREATED_AT = createField(DSL.name("created_at"), org.jooq.impl.SQLDataType.LOCALDATETIME.defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.LOCALDATETIME)), this, "");

    /**
     * The column <code>thangvtm_mcare.prescription.modified_at</code>.
     */
    public final TableField<PrescriptionRecord, LocalDateTime> MODIFIED_AT = createField(DSL.name("modified_at"), org.jooq.impl.SQLDataType.LOCALDATETIME.defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.LOCALDATETIME)), this, "");

    /**
     * Create a <code>thangvtm_mcare.prescription</code> table reference
     */
    public Prescription() {
        this(DSL.name("prescription"), null);
    }

    /**
     * Create an aliased <code>thangvtm_mcare.prescription</code> table reference
     */
    public Prescription(String alias) {
        this(DSL.name(alias), PRESCRIPTION);
    }

    /**
     * Create an aliased <code>thangvtm_mcare.prescription</code> table reference
     */
    public Prescription(Name alias) {
        this(alias, PRESCRIPTION);
    }

    private Prescription(Name alias, Table<PrescriptionRecord> aliased) {
        this(alias, aliased, null);
    }

    private Prescription(Name alias, Table<PrescriptionRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    public <O extends Record> Prescription(Table<O> child, ForeignKey<O, PrescriptionRecord> key) {
        super(child, key, PRESCRIPTION);
    }

    @Override
    public Schema getSchema() {
        return ThangvtmMcare.THANGVTM_MCARE;
    }

    @Override
    public Identity<PrescriptionRecord, Integer> getIdentity() {
        return Keys.IDENTITY_PRESCRIPTION;
    }

    @Override
    public UniqueKey<PrescriptionRecord> getPrimaryKey() {
        return Keys.KEY_PRESCRIPTION_PRIMARY;
    }

    @Override
    public List<UniqueKey<PrescriptionRecord>> getKeys() {
        return Arrays.<UniqueKey<PrescriptionRecord>>asList(Keys.KEY_PRESCRIPTION_PRIMARY);
    }

    @Override
    public Prescription as(String alias) {
        return new Prescription(DSL.name(alias), this);
    }

    @Override
    public Prescription as(Name alias) {
        return new Prescription(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Prescription rename(String name) {
        return new Prescription(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Prescription rename(Name name) {
        return new Prescription(name, null);
    }

    // -------------------------------------------------------------------------
    // Row8 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row8<Integer, String, String, Integer, Integer, String, LocalDateTime, LocalDateTime> fieldsRow() {
        return (Row8) super.fieldsRow();
    }
}
