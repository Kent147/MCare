/*
 * This file is generated by jOOQ.
 */
package vn.mcare.system.repository.model.tables;


import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row8;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import vn.mcare.system.repository.model.Keys;
import vn.mcare.system.repository.model.ThangvtmMcare;
import vn.mcare.system.repository.model.tables.records.MedicineBillRecord;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MedicineBill extends TableImpl<MedicineBillRecord> {

    private static final long serialVersionUID = 408776612;

    /**
     * The reference instance of <code>thangvtm_mcare.medicine_bill</code>
     */
    public static final MedicineBill MEDICINE_BILL = new MedicineBill();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<MedicineBillRecord> getRecordType() {
        return MedicineBillRecord.class;
    }

    /**
     * The column <code>thangvtm_mcare.medicine_bill.id</code>.
     */
    public final TableField<MedicineBillRecord, Integer> ID = createField(DSL.name("id"), org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>thangvtm_mcare.medicine_bill.bill_id</code>.
     */
    public final TableField<MedicineBillRecord, String> BILL_ID = createField(DSL.name("bill_id"), org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false), this, "");

    /**
     * The column <code>thangvtm_mcare.medicine_bill.inventory_id</code>.
     */
    public final TableField<MedicineBillRecord, String> INVENTORY_ID = createField(DSL.name("inventory_id"), org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false), this, "");

    /**
     * The column <code>thangvtm_mcare.medicine_bill.medicine_id</code>.
     */
    public final TableField<MedicineBillRecord, String> MEDICINE_ID = createField(DSL.name("medicine_id"), org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false), this, "");

    /**
     * The column <code>thangvtm_mcare.medicine_bill.amount</code>.
     */
    public final TableField<MedicineBillRecord, Integer> AMOUNT = createField(DSL.name("amount"), org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>thangvtm_mcare.medicine_bill.cal_unit</code>.
     */
    public final TableField<MedicineBillRecord, Integer> CAL_UNIT = createField(DSL.name("cal_unit"), org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>thangvtm_mcare.medicine_bill.created_at</code>.
     */
    public final TableField<MedicineBillRecord, LocalDateTime> CREATED_AT = createField(DSL.name("created_at"), org.jooq.impl.SQLDataType.LOCALDATETIME.defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.LOCALDATETIME)), this, "");

    /**
     * The column <code>thangvtm_mcare.medicine_bill.modified_at</code>.
     */
    public final TableField<MedicineBillRecord, LocalDateTime> MODIFIED_AT = createField(DSL.name("modified_at"), org.jooq.impl.SQLDataType.LOCALDATETIME.defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.LOCALDATETIME)), this, "");

    /**
     * Create a <code>thangvtm_mcare.medicine_bill</code> table reference
     */
    public MedicineBill() {
        this(DSL.name("medicine_bill"), null);
    }

    /**
     * Create an aliased <code>thangvtm_mcare.medicine_bill</code> table reference
     */
    public MedicineBill(String alias) {
        this(DSL.name(alias), MEDICINE_BILL);
    }

    /**
     * Create an aliased <code>thangvtm_mcare.medicine_bill</code> table reference
     */
    public MedicineBill(Name alias) {
        this(alias, MEDICINE_BILL);
    }

    private MedicineBill(Name alias, Table<MedicineBillRecord> aliased) {
        this(alias, aliased, null);
    }

    private MedicineBill(Name alias, Table<MedicineBillRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    public <O extends Record> MedicineBill(Table<O> child, ForeignKey<O, MedicineBillRecord> key) {
        super(child, key, MEDICINE_BILL);
    }

    @Override
    public Schema getSchema() {
        return ThangvtmMcare.THANGVTM_MCARE;
    }

    @Override
    public Identity<MedicineBillRecord, Integer> getIdentity() {
        return Keys.IDENTITY_MEDICINE_BILL;
    }

    @Override
    public UniqueKey<MedicineBillRecord> getPrimaryKey() {
        return Keys.KEY_MEDICINE_BILL_PRIMARY;
    }

    @Override
    public List<UniqueKey<MedicineBillRecord>> getKeys() {
        return Arrays.<UniqueKey<MedicineBillRecord>>asList(Keys.KEY_MEDICINE_BILL_PRIMARY);
    }

    @Override
    public MedicineBill as(String alias) {
        return new MedicineBill(DSL.name(alias), this);
    }

    @Override
    public MedicineBill as(Name alias) {
        return new MedicineBill(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public MedicineBill rename(String name) {
        return new MedicineBill(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public MedicineBill rename(Name name) {
        return new MedicineBill(name, null);
    }

    // -------------------------------------------------------------------------
    // Row8 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row8<Integer, String, String, String, Integer, Integer, LocalDateTime, LocalDateTime> fieldsRow() {
        return (Row8) super.fieldsRow();
    }
}
