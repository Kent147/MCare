/*
 * This file is generated by jOOQ.
 */
package vn.mcare.system.repository.model.tables;


import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row6;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import vn.mcare.system.repository.model.Keys;
import vn.mcare.system.repository.model.ThangvtmMcare;
import vn.mcare.system.repository.model.tables.records.MedicalReportDetailRecord;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MedicalReportDetail extends TableImpl<MedicalReportDetailRecord> {

    private static final long serialVersionUID = 710399461;

    /**
     * The reference instance of <code>thangvtm_mcare.medical_report_detail</code>
     */
    public static final MedicalReportDetail MEDICAL_REPORT_DETAIL = new MedicalReportDetail();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<MedicalReportDetailRecord> getRecordType() {
        return MedicalReportDetailRecord.class;
    }

    /**
     * The column <code>thangvtm_mcare.medical_report_detail.id</code>.
     */
    public final TableField<MedicalReportDetailRecord, Integer> ID = createField(DSL.name("id"), org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>thangvtm_mcare.medical_report_detail.medical_report_id</code>.
     */
    public final TableField<MedicalReportDetailRecord, String> MEDICAL_REPORT_ID = createField(DSL.name("medical_report_id"), org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false), this, "");

    /**
     * The column <code>thangvtm_mcare.medical_report_detail.examine_id</code>.
     */
    public final TableField<MedicalReportDetailRecord, String> EXAMINE_ID = createField(DSL.name("examine_id"), org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false), this, "");

    /**
     * The column <code>thangvtm_mcare.medical_report_detail.status</code>.
     */
    public final TableField<MedicalReportDetailRecord, Integer> STATUS = createField(DSL.name("status"), org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>thangvtm_mcare.medical_report_detail.created_at</code>.
     */
    public final TableField<MedicalReportDetailRecord, LocalDateTime> CREATED_AT = createField(DSL.name("created_at"), org.jooq.impl.SQLDataType.LOCALDATETIME.defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.LOCALDATETIME)), this, "");

    /**
     * The column <code>thangvtm_mcare.medical_report_detail.modified_at</code>.
     */
    public final TableField<MedicalReportDetailRecord, LocalDateTime> MODIFIED_AT = createField(DSL.name("modified_at"), org.jooq.impl.SQLDataType.LOCALDATETIME.defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.LOCALDATETIME)), this, "");

    /**
     * Create a <code>thangvtm_mcare.medical_report_detail</code> table reference
     */
    public MedicalReportDetail() {
        this(DSL.name("medical_report_detail"), null);
    }

    /**
     * Create an aliased <code>thangvtm_mcare.medical_report_detail</code> table reference
     */
    public MedicalReportDetail(String alias) {
        this(DSL.name(alias), MEDICAL_REPORT_DETAIL);
    }

    /**
     * Create an aliased <code>thangvtm_mcare.medical_report_detail</code> table reference
     */
    public MedicalReportDetail(Name alias) {
        this(alias, MEDICAL_REPORT_DETAIL);
    }

    private MedicalReportDetail(Name alias, Table<MedicalReportDetailRecord> aliased) {
        this(alias, aliased, null);
    }

    private MedicalReportDetail(Name alias, Table<MedicalReportDetailRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    public <O extends Record> MedicalReportDetail(Table<O> child, ForeignKey<O, MedicalReportDetailRecord> key) {
        super(child, key, MEDICAL_REPORT_DETAIL);
    }

    @Override
    public Schema getSchema() {
        return ThangvtmMcare.THANGVTM_MCARE;
    }

    @Override
    public Identity<MedicalReportDetailRecord, Integer> getIdentity() {
        return Keys.IDENTITY_MEDICAL_REPORT_DETAIL;
    }

    @Override
    public UniqueKey<MedicalReportDetailRecord> getPrimaryKey() {
        return Keys.KEY_MEDICAL_REPORT_DETAIL_PRIMARY;
    }

    @Override
    public List<UniqueKey<MedicalReportDetailRecord>> getKeys() {
        return Arrays.<UniqueKey<MedicalReportDetailRecord>>asList(Keys.KEY_MEDICAL_REPORT_DETAIL_PRIMARY);
    }

    @Override
    public MedicalReportDetail as(String alias) {
        return new MedicalReportDetail(DSL.name(alias), this);
    }

    @Override
    public MedicalReportDetail as(Name alias) {
        return new MedicalReportDetail(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public MedicalReportDetail rename(String name) {
        return new MedicalReportDetail(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public MedicalReportDetail rename(Name name) {
        return new MedicalReportDetail(name, null);
    }

    // -------------------------------------------------------------------------
    // Row6 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row6<Integer, String, String, Integer, LocalDateTime, LocalDateTime> fieldsRow() {
        return (Row6) super.fieldsRow();
    }
}
